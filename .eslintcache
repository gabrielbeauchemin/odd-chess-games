[{"/home/gabriel9130/projets/odd-chess-games/src/reportWebVitals.ts":"1","/home/gabriel9130/projets/odd-chess-games/src/components/NavBar.js":"2","/home/gabriel9130/projets/odd-chess-games/src/components/LeftMenu.js":"3","/home/gabriel9130/projets/odd-chess-games/src/App.tsx":"4","/home/gabriel9130/projets/odd-chess-games/src/pages/Page.tsx":"5","/home/gabriel9130/projets/odd-chess-games/src/pages/WelcomePage.tsx":"6","/home/gabriel9130/projets/odd-chess-games/src/pages/PageContent.tsx":"7","/home/gabriel9130/projets/odd-chess-games/src/components/ChessBoard.tsx":"8","/home/gabriel9130/projets/odd-chess-games/src/index.tsx":"9","/home/gabriel9130/projets/odd-chess-games/src/pages/WhoWinGamePage.tsx":"10","/home/gabriel9130/projets/odd-chess-games/src/redux/RootReducer.ts":"11","/home/gabriel9130/projets/odd-chess-games/src/redux/tactics/TacticsReducer.ts":"12","/home/gabriel9130/projets/odd-chess-games/src/redux/tactics/WhoWinsReducer.ts":"13","/home/gabriel9130/projets/odd-chess-games/src/redux/tactics/FetchRandomWhoWinsTacticsSaga.ts":"14","/home/gabriel9130/projets/odd-chess-games/src/redux/tactics/WhoWinsTacticsActions.ts":"15","/home/gabriel9130/projets/odd-chess-games/src/redux/RootSaga.ts":"16","/home/gabriel9130/projets/odd-chess-games/src/redux/tactics/TacticsProxy.ts":"17","/home/gabriel9130/projets/odd-chess-games/src/components/WhoWinsGame.tsx":"18","/home/gabriel9130/projets/odd-chess-games/src/components/MinutesCounter.tsx":"19","/home/gabriel9130/projets/odd-chess-games/src/redux/tactics/ReceiveUserGuessWhoWinsSaga.ts":"20","/home/gabriel9130/projets/odd-chess-games/src/store.ts":"21","/home/gabriel9130/projets/odd-chess-games/src/util/uuid.ts":"22","/home/gabriel9130/projets/odd-chess-games/src/pages/IsItDrawGamePage.tsx":"23","/home/gabriel9130/projets/odd-chess-games/src/components/IsItDrawGame.tsx":"24"},{"size":425,"mtime":1615693197925,"results":"25","hashOfConfig":"26"},{"size":1274,"mtime":1609635306087,"results":"27","hashOfConfig":"26"},{"size":775,"mtime":1619056610715,"results":"28","hashOfConfig":"26"},{"size":574,"mtime":1619054789036,"results":"29","hashOfConfig":"26"},{"size":269,"mtime":1615691634100,"results":"30","hashOfConfig":"26"},{"size":826,"mtime":1618798010109,"results":"31","hashOfConfig":"26"},{"size":204,"mtime":1615171592399,"results":"32","hashOfConfig":"26"},{"size":388,"mtime":1617846666712,"results":"33","hashOfConfig":"26"},{"size":1016,"mtime":1616277165623,"results":"34","hashOfConfig":"26"},{"size":1886,"mtime":1617680400288,"results":"35","hashOfConfig":"26"},{"size":174,"mtime":1616276878450,"results":"36","hashOfConfig":"26"},{"size":172,"mtime":1615775961277,"results":"37","hashOfConfig":"26"},{"size":1293,"mtime":1617633279266,"results":"38","hashOfConfig":"26"},{"size":1155,"mtime":1618717586614,"results":"39","hashOfConfig":"26"},{"size":1152,"mtime":1617632836714,"results":"40","hashOfConfig":"26"},{"size":348,"mtime":1617680662382,"results":"41","hashOfConfig":"26"},{"size":354,"mtime":1616268362349,"results":"42","hashOfConfig":"26"},{"size":4285,"mtime":1618715838088,"results":"43","hashOfConfig":"26"},{"size":1552,"mtime":1617594272216,"results":"44","hashOfConfig":"26"},{"size":2474,"mtime":1618714671310,"results":"45","hashOfConfig":"26"},{"size":488,"mtime":1617654318017,"results":"46","hashOfConfig":"26"},{"size":223,"mtime":1617845671563,"results":"47","hashOfConfig":"26"},{"size":1888,"mtime":1619054803676,"results":"48","hashOfConfig":"26"},{"size":4277,"mtime":1619055737825,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"3dy3oz",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"59"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"59"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"59"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/gabriel9130/projets/odd-chess-games/src/reportWebVitals.ts",[],"/home/gabriel9130/projets/odd-chess-games/src/components/NavBar.js",[],["105","106"],"/home/gabriel9130/projets/odd-chess-games/src/components/LeftMenu.js",[],"/home/gabriel9130/projets/odd-chess-games/src/App.tsx",[],["107","108"],"/home/gabriel9130/projets/odd-chess-games/src/pages/Page.tsx",[],"/home/gabriel9130/projets/odd-chess-games/src/pages/WelcomePage.tsx",["109","110"],"import React from \"react\";\nimport { Page } from \"./Page\";\nimport { PageContent } from \"./PageContent\";\nimport style from \"./WelcomePage.module.css\";\n\nexport function WelcomePage() {\n  return (\n    <Page>\n      <PageContent>\n        <h3>Welcome</h3>\n        <p>\n          You will find on this site special chess games that I could not find\n          else where. Enjoy!\n        </p>\n        <br />\n        <div className={style.GameImages}>\n          <div className={style.GameImage}>\n            <a href=\"/who-wins\">\n              <img src=\"whowins.png\" width=\"100%\" />\n            </a>\n          </div>\n          <div className={style.GameImage}>\n            <a href=\"/is-it-draw\">\n              <img src=\"isitdraw.png\" width=\"100%\" />\n            </a>\n          </div>\n        </div>\n      </PageContent>\n    </Page>\n  );\n}\n","/home/gabriel9130/projets/odd-chess-games/src/pages/PageContent.tsx",[],"/home/gabriel9130/projets/odd-chess-games/src/components/ChessBoard.tsx",[],"/home/gabriel9130/projets/odd-chess-games/src/index.tsx",[],"/home/gabriel9130/projets/odd-chess-games/src/pages/WhoWinGamePage.tsx",["111"],"/home/gabriel9130/projets/odd-chess-games/src/redux/RootReducer.ts",[],["112","113"],"/home/gabriel9130/projets/odd-chess-games/src/redux/tactics/TacticsReducer.ts",[],"/home/gabriel9130/projets/odd-chess-games/src/redux/tactics/WhoWinsReducer.ts",[],["114","115"],"/home/gabriel9130/projets/odd-chess-games/src/redux/tactics/FetchRandomWhoWinsTacticsSaga.ts",["116"],"/home/gabriel9130/projets/odd-chess-games/src/redux/tactics/WhoWinsTacticsActions.ts",[],"/home/gabriel9130/projets/odd-chess-games/src/redux/RootSaga.ts",[],"/home/gabriel9130/projets/odd-chess-games/src/redux/tactics/TacticsProxy.ts",[],"/home/gabriel9130/projets/odd-chess-games/src/components/WhoWinsGame.tsx",["117"],"import { Button, Modal } from \"antd\";\nimport React, { useState } from \"react\";\nimport { WhoWinsModel } from \"../redux/tactics/WhoWinsModel\";\nimport { uuidv4 } from \"../util/uuid\";\nimport { ChessBoard } from \"./ChessBoard\";\nimport { MinutesCounter } from \"./MinutesCounter\";\n\ntype WhoWinsGameProps = {\n  currentTactic: WhoWinsModel | null;\n  popWhoWinsTactics: () => void;\n  receiveUserGuess: (\n    isWhiteWinning: boolean,\n    incrementScore: () => void,\n    onUserGuessFailure: (message: string) => void\n  ) => void;\n};\n\nexport function WhoWinsGame(props: WhoWinsGameProps) {\n  const [gameStarted, setGameStarted] = useState(false);\n  const [counterId, setCounterId] = useState<string | undefined>(undefined);\n  const [score, setScore] = useState(0);\n  const [bestScore, setBestScore] = useState(0);\n  const onUserGuessFailure = (message: string) => {\n    if (score > bestScore) setBestScore(score);\n    setScore(0);\n    setGameStarted(false);\n    setCounterId(undefined);\n    Modal.error({\n      title: message,\n    });\n  };\n  return (\n    <>\n      <h3>Who wins?</h3>\n      <div>\n        <div className=\"flex\" style={{ justifyContent: \"space-between\" }}>\n          <div>\n            <MinutesCounter\n              seconds={180}\n              counterId={counterId}\n              onFinish={() => {\n                setGameStarted(false);\n                setCounterId(undefined);\n                if (score > bestScore) setBestScore(score);\n                setScore(0);\n                Modal.info({\n                  title: `Finished! Your score is ${score}.`,\n                  content: null,\n                  onOk() {},\n                });\n              }}\n            />\n          </div>\n          <div className=\"flex\">\n            <div>Score: {score}</div>\n            <div>&nbsp; Record: {bestScore}</div>\n          </div>\n        </div>\n        <ChessBoard\n          fen={\n            props.currentTactic !== null\n              ? props.currentTactic.fen\n              : \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\"\n          }\n          viewOnly={true}\n          orientation={getSideToPlayFromFen(props.currentTactic?.fen)}\n        />\n      </div>\n      <br />\n      <div>\n        {gameStarted && props.currentTactic ? (\n          <div>\n            <div>\n              {toTitleCase(getSideToPlayFromFen(props.currentTactic.fen))} to\n              play. Who should win?\n            </div>\n            <div className=\"flex\" style={{ justifyContent: \"space-evenly\" }}>\n              <Button\n                size=\"large\"\n                style={{ backgroundColor: \"white\" }}\n                onClick={() =>\n                  props.receiveUserGuess(\n                    true,\n                    () => setScore(score + 1),\n                    onUserGuessFailure\n                  )\n                }\n              >\n                White\n              </Button>\n              <Button\n                size=\"large\"\n                style={{ backgroundColor: \"black\" }}\n                onClick={() =>\n                  props.receiveUserGuess(\n                    false,\n                    () => setScore(score + 1),\n                    onUserGuessFailure\n                  )\n                }\n              >\n                Black\n              </Button>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <div>\n              Find which side is winning as many times as possible in three\n              minutes.\n            </div>\n            <div>Don't be mistaken or it is game over.</div>\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n              <Button\n                size=\"large\"\n                onClick={() => {\n                  props.popWhoWinsTactics();\n                  setGameStarted(true);\n                  setCounterId(uuidv4());\n                }}\n              >\n                Start\n              </Button>\n            </div>\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nfunction getSideToPlayFromFen(fen: string | undefined) {\n  if (fen === undefined || fen.split(\" \")[1] == \"w\") {\n    return \"white\";\n  }\n  return \"black\";\n}\n\nfunction toTitleCase(str: string) {\n  return str.replace(/\\w\\S*/g, function (txt) {\n    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n  });\n}\n","/home/gabriel9130/projets/odd-chess-games/src/components/MinutesCounter.tsx",["118","119","120","121","122"],"/home/gabriel9130/projets/odd-chess-games/src/redux/tactics/ReceiveUserGuessWhoWinsSaga.ts",["123","124"],"import {\n  fetchRandomWhoWinsTacticsAction,\n  popWhoWinsTacticsAction,\n  ReceiveUserGuessWhoWinsAction,\n  RECEIVE_USER_GUESS_WHO_WINS_ACTION,\n} from \"./WhoWinsTacticsActions\";\nimport { put, takeEvery, select } from \"redux-saga/effects\";\nimport { WhoWinsModel } from \"./WhoWinsModel\";\nimport { message } from \"antd\";\n\nfunction* receiveUserGuessWhoWinsSaga(action: ReceiveUserGuessWhoWinsAction) {\n  const tactics: WhoWinsModel[] = yield select(\n    (state) => state.tactics.whoWins.all\n  );\n  const currentTactic: WhoWinsModel = yield select(\n    (state) => state.tactics.whoWins.current\n  );\n  if (tactics.length < 10) {\n    yield put(fetchRandomWhoWinsTacticsAction(20));\n  }\n  if (isUserEvaluationValid(action.isWhiteWinning, currentTactic)) {\n    action.incrementScore();\n    message.success(\n      `Correct! The engine evaluation for this position is ${evalToString(\n        currentTactic.eval,\n        currentTactic\n      )}.`\n    );\n    yield put(popWhoWinsTacticsAction());\n  } else {\n    action.onUserGuessFailure(\n      `Game over! The engine evaluation for this position is ${evalToString(\n        currentTactic.eval,\n        currentTactic\n      )}.`\n    );\n  }\n}\n\nfunction isUserEvaluationValid(\n  doUserThinkWhiteWon: boolean,\n  tactic: WhoWinsModel\n) {\n  //For stockfish, the evaluation is relative to the camp that has to play\n  const oppositeSideWon = parseInt(tactic.eval.replace(\"#\", \"\")) < 0;\n  const isWhiteCamp = tactic.fen.split(\" \")[1] == \"w\";\n  const doWhiteWon =\n    (isWhiteCamp === true && oppositeSideWon === false) ||\n    (isWhiteCamp === false && oppositeSideWon === true);\n  return doUserThinkWhiteWon === doWhiteWon;\n}\n\nfunction evalToString(evaluation: string, tactic: WhoWinsModel) {\n  //For stockfish, the evaluation is relative to the camp that has to play\n  const isWhiteCamp = tactic.fen.split(\" \")[1] == \"w\";\n  if (evaluation.includes(\"#\")) {\n    if (\n      (evaluation.includes(\"-\") && isWhiteCamp) ||\n      (evaluation.includes(\"-\") === false && isWhiteCamp === false)\n    ) {\n      return `mat in ${evaluation.replace(\"#-\", \"\")} for black`;\n    }\n    return `mat in ${evaluation.replace(\"#\", \"\")} for white`;\n  }\n  if (isWhiteCamp === false) {\n    return (-1 * parseFloat(evaluation)) / 100;\n  }\n  return parseFloat(evaluation) / 100;\n}\n\nfunction* watchReceiveUserGuessWhoWinsSaga() {\n  yield takeEvery(\n    RECEIVE_USER_GUESS_WHO_WINS_ACTION,\n    receiveUserGuessWhoWinsSaga\n  );\n}\n\nexport default watchReceiveUserGuessWhoWinsSaga;\n","/home/gabriel9130/projets/odd-chess-games/src/store.ts",[],"/home/gabriel9130/projets/odd-chess-games/src/util/uuid.ts",[],"/home/gabriel9130/projets/odd-chess-games/src/pages/IsItDrawGamePage.tsx",["125"],"/home/gabriel9130/projets/odd-chess-games/src/components/IsItDrawGame.tsx",["126"],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"127","replacedBy":"131"},{"ruleId":"129","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":19,"column":15,"nodeType":"135","endLine":19,"endColumn":53},{"ruleId":"133","severity":1,"message":"134","line":24,"column":15,"nodeType":"135","endLine":24,"endColumn":54},{"ruleId":"136","severity":1,"message":"137","line":26,"column":3,"nodeType":"138","endLine":26,"endColumn":12},{"ruleId":"127","replacedBy":"139"},{"ruleId":"129","replacedBy":"140"},{"ruleId":"127","replacedBy":"141"},{"ruleId":"129","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":20,"column":29,"nodeType":"145","messageId":"146","endLine":20,"endColumn":31},{"ruleId":"143","severity":1,"message":"147","line":133,"column":46,"nodeType":"145","messageId":"146","endLine":133,"endColumn":48},{"ruleId":"143","severity":1,"message":"147","line":13,"column":25,"nodeType":"145","messageId":"146","endLine":13,"endColumn":27},{"ruleId":"143","severity":1,"message":"144","line":17,"column":40,"nodeType":"145","messageId":"146","endLine":17,"endColumn":42},{"ruleId":"143","severity":1,"message":"144","line":21,"column":33,"nodeType":"145","messageId":"146","endLine":21,"endColumn":35},{"ruleId":"143","severity":1,"message":"147","line":21,"column":61,"nodeType":"145","messageId":"146","endLine":21,"endColumn":63},{"ruleId":"136","severity":1,"message":"148","line":30,"column":6,"nodeType":"149","endLine":30,"endColumn":63,"suggestions":"150"},{"ruleId":"143","severity":1,"message":"147","line":46,"column":48,"nodeType":"145","messageId":"146","endLine":46,"endColumn":50},{"ruleId":"143","severity":1,"message":"147","line":55,"column":48,"nodeType":"145","messageId":"146","endLine":55,"endColumn":50},{"ruleId":"136","severity":1,"message":"137","line":26,"column":3,"nodeType":"138","endLine":26,"endColumn":12},{"ruleId":"143","severity":1,"message":"147","line":133,"column":46,"nodeType":"145","messageId":"146","endLine":133,"endColumn":48},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],["151"],["152"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect received a function whose dependencies are unknown. Pass an inline function instead.","Identifier",["151"],["152"],["151"],["152"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["153"],"no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},"Update the dependencies array to be: [props.counterId, props.onFinish, secondsLeft, beginDate, props]",{"range":"156","text":"157"},[1022,1079],"[props.counterId, props.onFinish, secondsLeft, beginDate, props]"]